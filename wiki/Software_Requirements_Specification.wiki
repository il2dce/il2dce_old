#summary Vision and requirements.
#labels Phase-Requirements,Draft

= Introduction =

This document contains the vision, examples for campaign scenarios and use cases that should help to identify the requirements for IL2DCE.

Note that this document only considers the current development stage and may change considerably in later stages.

= Details =

== Vision ==

The vision of IL2DCE is to provide a dynamic campaign engine for IL-2 _Sturmovik: Cliffs of Dover_. IL2DCE simulates a persistent world where the actions of the participating player and AI actors have a permanent effect and influence the outcome of a campaign. The persistent world is hosted on a server and only progresses while it running. It features a cooperative gameplay that concentrates on aircraft groups, contrary to the dogfight gameplay that concentrates on individual aircraft.

== Examples for campaign scenarios ==

=== Adlerangriff (13 August - 6 September 1940) ===

The Luftwaffe tries to crush Fighter Command. Their bombers attack the airfields and radar stations, while their fighters provide escort. Fighter Command undertakes intercept and patrol operations.

The main goal for both sides is to reduce the amount of aircraft of the opposing side.

== Use cases ==

=== General ===

==== Client login ====

The player starts the game _IL-2 Sturmovik: Cliffs of Dover_, selects _Multiplayer_ and then _Client_ in the menu, browses the server list and then connects to the server running IL2DCE. Once the mission has loaded he selects an army. He is informed over the current state and task of each active air group. He can then select one of the aircraft in the aircraft list.

==== Client logout ====

The player disconnects from the server running IL2DCE. If the mission is not finished his aircraft will continue under AI control.


==== Server start ====

The host starts the dedicated server application of _IL-2 Sturmovik: Cliffs of Dover_ and either loads the initial campaign template to start a new campaign or any save-game to continue an existing campaign. The campaign progress continues as soon as the battle is started.

==== Server end ====

The host stops the battle and closes the dedicated server application. The current state is stored as a save-game.

=== Air operations ===

==== Ground attack ====

==== Escort ====

==== Intercept ====

==== Defensive Patrol ====

=== Persistent world ===

==== Actor destroyed ====

=== Campaign creation ===

==== Dynamic campaign ====

For a dynamic campaign only the initial strategic and tactical situation is defined for ground units, air units, supplies and reinforcements. The progress and outcome of the campaign is not defined and evolves completely dynamic depending on the past events.

This campaign type is recommended for fictional and semi-historical campaigns.

==== Semi-dynamic campaign ====

For a semi-dynamic campaign the strategic and tactical situation for ground units, air units, supplies and reinforcements is defined for various stages of the campaign. The interval between these stages may vary. Between two defined stages the progress of the campaign evolves dynamic. At the end of one stage the definitions of the following stage are applied, however certain information are propagated forward, like strength, supplies and experience of the units. To reduce the inflicted conflicts between the dynamic progress and the defined situation of the following stage the intervals between two stages should be small.

This campaign type is recommended for historical campaigns.

== Functional Requirments ==

See [http://code.google.com/p/il2dce/issues/list Issues].

== Non-functional Requirments ==

=== Campaign Creation ===

New campaigns can be created with little effort. A campaign template file is created within the _Full Mission Builder_ that defines the initial situation of the campaign. Configuration files can be provided optionally to overwrite the global configuration.

=== Rapid release cycles ===

New versions are released frequently.

=== Scalability ===

==== Performance ====

Only the units that are involved in an operation are visible in the 3D engine. The amount of operations in each battle can be scaled to the available hardware.

==== Game content ====

New game content (e.g. Aircraft, vehicles, statics, maps, ...) can be added without changes in the source code.